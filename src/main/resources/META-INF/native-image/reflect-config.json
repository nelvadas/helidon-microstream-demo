[
  {
    "name":"boolean",
    "allDeclaredMethods":true
  },
  {
    "name":"boolean[]",
    "allDeclaredMethods":true
  },
  {
    "name":"byte",
    "allDeclaredMethods":true
  },
  {
    "name":"byte[]",
    "allDeclaredMethods":true
  },
  {
    "name":"char",
    "allDeclaredMethods":true
  },
  {
    "name":"char[]",
    "allDeclaredMethods":true
  },
  {
    "name":"com.oracle.graalvm.microstream.demo.EmployeeResource",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true,
    "allPublicConstructors":true
  },
  {
    "name":"com.oracle.graalvm.microstream.demo.EmployeeResource$Proxy$_$$_WeldClientProxy",
    "allDeclaredFields":true
  },
  {
    "name":"com.oracle.graalvm.microstream.demo.EmployeeResource$Proxy$_$$_WeldSubclass",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"com.oracle.graalvm.microstream.demo.dao.DataRoot",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "fields":[{"name":"employeeList", "allowUnsafeAccess":true}]
  },
  {
    "name":"com.oracle.graalvm.microstream.demo.dao.EmployeDaoService",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"com.oracle.graalvm.microstream.demo.dao.EmployeeDaoServiceImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"com.oracle.graalvm.microstream.demo.dao.EmployeeDaoServiceImpl$Proxy$_$$_WeldClientProxy",
    "allDeclaredFields":true
  },
  {
    "name":"com.oracle.graalvm.microstream.demo.model.Employee",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true,
    "fields":[
      {"name":"firstname", "allowUnsafeAccess":true},
      {"name":"lastname", "allowUnsafeAccess":true},
      {"name":"uid", "allowUnsafeAccess":true}
    ]
  },
  {
    "name":"com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.sun.xml.internal.stream.XMLInputFactoryImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"double",
    "allDeclaredMethods":true
  },
  {
    "name":"double[]",
    "allDeclaredMethods":true
  },
  {
    "name":"float",
    "allDeclaredMethods":true
  },
  {
    "name":"float[]",
    "allDeclaredMethods":true
  },
  {
    "name":"int",
    "allDeclaredMethods":true
  },
  {
    "name":"int[]",
    "allDeclaredMethods":true
  },
  {
    "name":"io.helidon.config.Config",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.health.checks.DeadlockHealthCheck",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.health.checks.DiskSpaceHealthCheck",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.health.checks.HeapMemoryHealthCheck",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.health.common.BuiltInHealthCheck",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.cdi.BuildTimeEnd",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.cdi.BuildTimeStart",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.cdi.ExecutorServices",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.helidon.microprofile.cdi.HelidonContainerImpl$2",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.cdi.RuntimeStart",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.config.ConfigCdiExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.faulttolerance.CommandBinding",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.faulttolerance.CommandInterceptor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.faulttolerance.FaultToleranceExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.faulttolerance.FaultToleranceExtension$JerseyRequestScopeAsCdiBean",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.health.HealthCdiExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.health.JvmRuntimeProducers",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.jwt.auth.Impl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.jwt.auth.JsonWebTokenProducer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.jwt.auth.JwtAuthCdiExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.InterceptorBase",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.helidon.microprofile.metrics.InterceptorConcurrentGauge",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.InterceptorCounted",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.InterceptorMetered",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.InterceptorSimplyTimed",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.InterceptorSyntheticSimplyTimed",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.InterceptorTimed",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.MetricProducer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.MetricsCdiExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.RegistryProducer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.RestEndpointMetricsInfo",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.RestEndpointMetricsInfo$Proxy$_$$_WeldClientProxy",
    "allDeclaredFields":true
  },
  {
    "name":"io.helidon.microprofile.metrics.SyntheticSimplyTimed",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.metrics.VendorDefined",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.openapi.OpenApiCdiExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.security.SecurityCdiExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.security.SecurityProducer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.server.JaxRsCdiExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.server.JaxRsCdiExtension$1",
    "allDeclaredMethods":true
  },
  {
    "name":"io.helidon.microprofile.server.JaxRsCdiExtension$2",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"io.helidon.microprofile.server.ServerCdiExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.tracing.MpTracingAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.tracing.MpTracingContextFilter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.tracing.MpTracingInterceptor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.tracing.TracerProducer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.microprofile.tracing.TracingCdiExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.security.Security",
    "allDeclaredMethods":true
  },
  {
    "name":"io.helidon.security.integration.jersey.SecurityFeature",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"io.helidon.security.integration.jersey.SecurityFeature$1",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"io.helidon.security.integration.jersey.SecurityFeature$SecurityContextRefFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.security.integration.jersey.SecurityFilter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.security.integration.jersey.SecurityFilterCommon",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.security.integration.jersey.SecurityPreMatchingFilter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.security.integration.jersey.client.ClientSecurityAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.tracing.jersey.client.ClientTracingAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.webclient.jaxrs.JerseyClientAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.webserver.ForwardingHandler",
    "methods":[
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
    ]
  },
  {
    "name":"io.helidon.webserver.HttpInitializer"
  },
  {
    "name":"io.helidon.webserver.jersey.AsyncExecutorProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"io.helidon.webserver.jersey.WebServerBinder$SpanContextReferencingFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.webserver.jersey.WebServerBinder$WebServerRequestReferencingFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.helidon.webserver.jersey.WebServerBinder$WebServerResponseReferencingFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"io.netty.bootstrap.ServerBootstrap$1"
  },
  {
    "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
    "methods":[
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
    ]
  },
  {
    "name":"io.netty.buffer.AbstractByteBufAllocator",
    "allDeclaredMethods":true
  },
  {
    "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.channel.ChannelDuplexHandler",
    "methods":[{"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
  },
  {
    "name":"io.netty.channel.ChannelHandlerAdapter",
    "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
  },
  {
    "name":"io.netty.channel.ChannelInboundHandlerAdapter",
    "methods":[
      {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
      {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
    ]
  },
  {
    "name":"io.netty.channel.ChannelInitializer",
    "methods":[
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
    ]
  },
  {
    "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
    "methods":[
      {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
      {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
      {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
      {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
      {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
      {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
    ]
  },
  {
    "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods":[
      {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
      {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
      {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
      {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
      {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
      {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
      {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
    ]
  },
  {
    "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods":[
      {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
      {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
    ]
  },
  {
    "name":"io.netty.channel.SimpleChannelInboundHandler",
    "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.netty.channel.socket.nio.NioServerSocketChannel",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.netty.handler.codec.ByteToMessageDecoder",
    "methods":[
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
    ]
  },
  {
    "name":"io.netty.handler.codec.MessageToMessageEncoder",
    "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
  },
  {
    "name":"io.netty.handler.codec.http.HttpObjectDecoder",
    "methods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.netty.handler.codec.http.HttpRequestDecoder"
  },
  {
    "name":"io.netty.handler.codec.http.HttpResponseEncoder"
  },
  {
    "name":"io.netty.handler.logging.LoggingHandler",
    "methods":[
      {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
      {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
      {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
      {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
      {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
      {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
      {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
      {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
    ]
  },
  {
    "name":"io.netty.util.ReferenceCountUtil",
    "allDeclaredMethods":true
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.smallrye.openapi.api.models.ComponentsImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.ExtensibleImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.ExternalDocumentationImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.OpenAPIImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.OperationImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.PathItemImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.PathsImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.callbacks.CallbackImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.examples.ExampleImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.headers.HeaderImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.info.ContactImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.info.InfoImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.info.LicenseImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.links.LinkImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.media.EncodingImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.media.MediaTypeImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.media.SchemaImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.media.XMLImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.parameters.ParameterImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.parameters.RequestBodyImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.responses.APIResponseImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.responses.APIResponsesImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.security.OAuthFlowImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.security.OAuthFlowsImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.security.ScopesImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.security.SecuritySchemeImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.servers.ServerImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.servers.ServerVariableImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.servers.ServerVariablesImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"io.smallrye.openapi.api.models.tags.TagImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"java.beans.ConstructorProperties"
  },
  {
    "name":"java.beans.PropertyVetoException"
  },
  {
    "name":"java.io.File",
    "allDeclaredMethods":true
  },
  {
    "name":"java.io.Serializable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"java.lang.AutoCloseable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"java.lang.Boolean",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Byte",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Character",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Class",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Class[]"
  },
  {
    "name":"java.lang.Deprecated",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Double",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Float",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.FunctionalInterface",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Integer",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Long",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Long[]"
  },
  {
    "name":"java.lang.Object",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"java.lang.Object[]",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Runnable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"java.lang.Runtime",
    "allDeclaredMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"java.lang.Short",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.String",
    "allDeclaredMethods":true,
    "methods":[
      {"name":"<init>","parameterTypes":[] },
      {"name":"<init>","parameterTypes":["java.lang.String"] }
    ]
  },
  {
    "name":"java.lang.StringBuffer",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.StringBuilder",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Void",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.annotation.Annotation",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"java.lang.annotation.Documented",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.annotation.Inherited",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.annotation.Retention",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.annotation.Target",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.management.ManagementFactory",
    "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
  },
  {
    "name":"java.lang.management.RuntimeMXBean",
    "methods":[
      {"name":"getInputArguments","parameterTypes":[] },
      {"name":"getName","parameterTypes":[] }
    ]
  },
  {
    "name":"java.lang.reflect.Field[]"
  },
  {
    "name":"java.math.BigDecimal",
    "allDeclaredMethods":true
  },
  {
    "name":"java.math.BigInteger",
    "allDeclaredMethods":true
  },
  {
    "name":"java.net.Inet4Address",
    "allDeclaredMethods":true
  },
  {
    "name":"java.net.Inet6Address",
    "allDeclaredMethods":true
  },
  {
    "name":"java.net.InetAddress",
    "allDeclaredMethods":true
  },
  {
    "name":"java.net.InetSocketAddress",
    "allDeclaredMethods":true
  },
  {
    "name":"java.net.URI",
    "allDeclaredMethods":true
  },
  {
    "name":"java.net.URL",
    "allDeclaredMethods":true
  },
  {
    "name":"java.nio.Bits",
    "fields":[{"name":"UNALIGNED"}]
  },
  {
    "name":"java.nio.Buffer",
    "allDeclaredFields":true,
    "fields":[{"name":"address", "allowUnsafeAccess":true}]
  },
  {
    "name":"java.nio.DirectByteBuffer",
    "allDeclaredFields":true,
    "fields":[{"name":"cleaner", "allowUnsafeAccess":true}],
    "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
  },
  {
    "name":"java.nio.file.OpenOption[]"
  },
  {
    "name":"java.nio.file.Path",
    "allDeclaredMethods":true
  },
  {
    "name":"java.security.MessageDigestSpi"
  },
  {
    "name":"java.security.SecureRandomParameters"
  },
  {
    "name":"java.sql.Date",
    "allDeclaredMethods":true
  },
  {
    "name":"java.sql.Time",
    "allDeclaredMethods":true
  },
  {
    "name":"java.sql.Timestamp",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.AbstractCollection",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"java.util.AbstractList",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"java.util.AbstractMap",
    "allDeclaredFields":true
  },
  {
    "name":"java.util.AbstractSet",
    "allDeclaredFields":true
  },
  {
    "name":"java.util.ArrayDeque",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.ArrayList",
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"java.util.Collections$EmptyList",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Collections$EmptyMap",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Collections$EmptySet",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Collections$ReverseComparator",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Comparator"
  },
  {
    "name":"java.util.Comparators$NaturalOrderComparator",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Currency",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Date",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.HashMap",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.HashSet",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Hashtable",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.IdentityHashMap",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.LinkedHashMap",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.LinkedHashSet",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.LinkedList",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.List",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Locale",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Optional",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.OptionalDouble",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.OptionalInt",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.OptionalLong",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.PriorityQueue",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Properties",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Stack",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.TreeMap",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.TreeSet",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.Vector",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.WeakHashMap",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.concurrent.ConcurrentHashMap",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.concurrent.ConcurrentLinkedDeque",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.concurrent.ConcurrentLinkedQueue",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.concurrent.ConcurrentSkipListMap",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.concurrent.ConcurrentSkipListSet",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.concurrent.CopyOnWriteArrayList",
    "allDeclaredMethods":true
  },
  {
    "name":"java.util.concurrent.Flow$Subscriber"
  },
  {
    "name":"java.util.regex.Pattern",
    "allDeclaredMethods":true
  },
  {
    "name":"javassist.util.proxy.MethodHandler"
  },
  {
    "name":"javax.annotation.PostConstruct",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.annotation.PreDestroy"
  },
  {
    "name":"javax.annotation.Priority",
    "allDeclaredMethods":true,
    "methods":[{"name":"value","parameterTypes":[] }]
  },
  {
    "name":"javax.decorator.Decorator",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.decorator.Delegate",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.ejb.PostActivate"
  },
  {
    "name":"javax.ejb.PrePassivate"
  },
  {
    "name":"javax.enterprise.context.ApplicationScoped",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.context.BeforeDestroyed",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.context.ConversationScoped",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.context.Dependent",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.context.Destroyed",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.context.Initialized",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.context.NormalScope",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.enterprise.context.RequestScoped",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.context.SessionScoped",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.context.control.ActivateRequestContext",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.event.Event",
    "allPublicMethods":true
  },
  {
    "name":"javax.enterprise.event.Observes",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.enterprise.inject.Any",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.inject.Default",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.inject.Instance",
    "allPublicMethods":true
  },
  {
    "name":"javax.enterprise.inject.Produces",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.enterprise.inject.Stereotype",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.enterprise.inject.Vetoed",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.enterprise.inject.spi.CDI",
    "methods":[
      {"name":"current","parameterTypes":[] },
      {"name":"getBeanManager","parameterTypes":[] }
    ]
  },
  {
    "name":"javax.enterprise.inject.spi.Extension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.enterprise.inject.spi.WithAnnotations",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.enterprise.util.Nonbinding",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.inject.Inject",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.inject.Named",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.inject.Provider",
    "allPublicMethods":true
  },
  {
    "name":"javax.inject.Qualifier",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.inject.Scope",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.inject.Singleton",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.interceptor.AroundConstruct",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.interceptor.AroundInvoke",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.interceptor.AroundTimeout"
  },
  {
    "name":"javax.interceptor.ExcludeClassInterceptors"
  },
  {
    "name":"javax.interceptor.Interceptor",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.interceptor.InterceptorBinding",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.interceptor.Interceptors",
    "methods":[{"name":"value","parameterTypes":[] }]
  },
  {
    "name":"javax.ws.rs.ConstrainedTo",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.ws.rs.Consumes",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.ws.rs.DELETE",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.GET",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.HEAD",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.HttpMethod",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.ws.rs.OPTIONS",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.PATCH",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.POST",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.PUT",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.Path",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.ws.rs.PathParam",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.ws.rs.Produces",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.ws.rs.container.ContainerRequestFilter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.container.ContainerResponseFilter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.container.PreMatching",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.ws.rs.core.Application",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.ws.rs.core.Context",
    "allDeclaredMethods":true
  },
  {
    "name":"javax.ws.rs.core.Feature",
    "allPublicMethods":true
  },
  {
    "name":"javax.ws.rs.ext.ExceptionMapper",
    "allPublicMethods":true
  },
  {
    "name":"javax.ws.rs.ext.MessageBodyReader",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.ext.MessageBodyWriter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"javax.ws.rs.ext.Provider",
    "allDeclaredMethods":true
  },
  {
    "name":"jdk.internal.HotSpotIntrinsicCandidate",
    "allDeclaredMethods":true
  },
  {
    "name":"jdk.internal.misc.Unsafe",
    "methods":[{"name":"getUnsafe","parameterTypes":[] }]
  },
  {
    "name":"jdk.internal.ref.Cleaner",
    "allDeclaredFields":true,
    "fields":[{"name":"thunk", "allowUnsafeAccess":true}]
  },
  {
    "name":"long",
    "allDeclaredMethods":true
  },
  {
    "name":"long[]",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.afs.nio.NioReadableFile$Default[]"
  },
  {
    "name":"one.microstream.collections.BulkList",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.ConstHashEnum",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.ConstHashTable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.ConstHashTable$Keys"
  },
  {
    "name":"one.microstream.collections.ConstHashTable$Values"
  },
  {
    "name":"one.microstream.collections.ConstList",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.Empty",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.EmptyTable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "fields":[
      {"name":"keys", "allowUnsafeAccess":true},
      {"name":"values", "allowUnsafeAccess":true}
    ]
  },
  {
    "name":"one.microstream.collections.EmptyTable$Keys",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "fields":[{"name":"this$0", "allowUnsafeAccess":true}]
  },
  {
    "name":"one.microstream.collections.EmptyTable$Values",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "fields":[{"name":"this$0", "allowUnsafeAccess":true}]
  },
  {
    "name":"one.microstream.collections.EqBulkList",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.EqConstHashEnum",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.EqConstHashTable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.EqConstHashTable$Keys"
  },
  {
    "name":"one.microstream.collections.EqConstHashTable$Values"
  },
  {
    "name":"one.microstream.collections.EqHashEnum",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.EqHashTable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.EqHashTable$Keys"
  },
  {
    "name":"one.microstream.collections.EqHashTable$Values"
  },
  {
    "name":"one.microstream.collections.FixedList",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.HashEnum",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.HashTable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.HashTable$Keys"
  },
  {
    "name":"one.microstream.collections.HashTable$Values"
  },
  {
    "name":"one.microstream.collections.LimitList",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.collections.Singleton",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.hashing.HashEqualator"
  },
  {
    "name":"one.microstream.hashing.XHashing$SingletonIdentityHashEqualator",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.hashing.XHashing$SingletonKeyValueIdentityHashEqualator",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.hashing.XHashing$SingletonValueHashEqualator",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.java.net.BinaryHandlerInetSocketAddress",
    "allDeclaredFields":true
  },
  {
    "name":"one.microstream.memory.sun.JdkInternals$ObjectHeaderSizeDummy",
    "allDeclaredFields":true,
    "fields":[{"name":"calculateByteSizeObjectHeaderFieldOffsetDummy", "allowUnsafeAccess":true}]
  },
  {
    "name":"one.microstream.persistence.binary.types.BinaryField[]"
  },
  {
    "name":"one.microstream.persistence.binary.types.BinaryReferenceTraverser[]"
  },
  {
    "name":"one.microstream.persistence.binary.types.BinaryValueSetter[]"
  },
  {
    "name":"one.microstream.persistence.binary.types.LoadItemsChain$Entry[]"
  },
  {
    "name":"one.microstream.persistence.types.PersistenceRootReference$Default",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.persistence.types.PersistenceRoots$Default",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.persistence.types.PersistenceTypeDefinitionMemberFieldGeneric[]"
  },
  {
    "name":"one.microstream.persistence.types.PersistenceTypeDescription[]"
  },
  {
    "name":"one.microstream.reference.Lazy$Default",
    "allDeclaredMethods":true
  },
  {
    "name":"one.microstream.storage.types.StorageChannel$HousekeepingTask[]"
  },
  {
    "name":"one.microstream.util.Substituter$Default",
    "allDeclaredMethods":true
  },
  {
    "name":"org.eclipse.microprofile.config.Config",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.config.inject.ConfigProperty",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.faulttolerance.Asynchronous",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.faulttolerance.Bulkhead",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.faulttolerance.CircuitBreaker",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.faulttolerance.Fallback",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.faulttolerance.Retry",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.faulttolerance.Timeout",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.health.Health",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.health.HealthCheck",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.health.HealthCheck$$Proxy$_$$_WeldClientProxy",
    "allDeclaredFields":true
  },
  {
    "name":"org.eclipse.microprofile.health.Liveness",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.health.Readiness",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.metrics.MetricRegistry",
    "allDeclaredMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.eclipse.microprofile.metrics.annotation.ConcurrentGauge",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.metrics.annotation.Counted",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.metrics.annotation.Metered",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.metrics.annotation.RegistryType",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.metrics.annotation.SimplyTimed",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.metrics.annotation.Timed",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.Components",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.ExternalDocumentation",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.OpenAPI",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.Operation",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.PathItem",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.Paths",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.callbacks.Callback",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.examples.Example",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.headers.Header",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.info.Contact",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.info.Info",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.info.License",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.links.Link",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.media.Content",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.media.Discriminator",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.media.Encoding",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.media.MediaType",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.media.Schema",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.media.XML",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.parameters.Parameter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.parameters.RequestBody",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.responses.APIResponse",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.responses.APIResponses",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.security.OAuthFlow",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.security.OAuthFlows",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.security.Scopes",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.security.SecurityRequirement",
    "allDeclaredFields":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.security.SecurityScheme",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.servers.Server",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.servers.ServerVariable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.servers.ServerVariables",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.openapi.models.tags.Tag",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.eclipse.microprofile.opentracing.Traced",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.hk2.internal.PerThreadContext",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider$JaxRsParamProducer",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider$JaxRsParamProducer$JaxRsParamQualifier",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.ext.cdi1x.internal.GenericInjectionManagerStore",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true,
    "allPublicConstructors":true
  },
  {
    "name":"org.glassfish.jersey.ext.cdi1x.internal.JerseyVetoed",
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.ext.cdi1x.internal.ProcessAllAnnotatedTypes",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.ext.cdi1x.internal.ProcessJAXRSAnnotatedTypes",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.ext.cdi1x.internal.spi.InjectionManagerStore",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.ext.cdi1x.internal.spi.InjectionTargetListener",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.inject.hk2.ContextInjectionResolverImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.inject.hk2.Hk2InjectionManagerFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.glassfish.jersey.inject.hk2.Hk2RequestScope",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.inject.hk2.InstanceSupplierFactoryBridge",
    "methods":[{"name":"provide","parameterTypes":[] }]
  },
  {
    "name":"org.glassfish.jersey.inject.hk2.JerseyErrorService",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.inject.hk2.RequestContext",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.inject.hk2.SupplierFactoryBridge",
    "methods":[{"name":"provide","parameterTypes":[] }]
  },
  {
    "name":"org.glassfish.jersey.internal.JaxrsProviders",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.internal.config.ExternalPropertiesAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.internal.inject.AbstractBinder",
    "allDeclaredMethods":true,
    "allPublicMethods":true
  },
  {
    "name":"org.glassfish.jersey.internal.inject.Binder",
    "allPublicMethods":true
  },
  {
    "name":"org.glassfish.jersey.internal.inject.Custom",
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.internal.inject.ReferencingFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.jsonb.JsonBindingFeature",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.jsonb.internal.JsonBindingAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.jsonb.internal.JsonBindingProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.jsonp.JsonProcessingFeature",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.jsonp.internal.JsonProcessingAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.logging.LoggingFeatureAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.AbstractFormProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.AbstractMessageReaderWriterProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "methods":[
      {"name":"getCharset","parameterTypes":["javax.ws.rs.core.MediaType"] },
      {"name":"getSize","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.reflect.Type","java.lang.annotation.Annotation[]","javax.ws.rs.core.MediaType"] },
      {"name":"readFromAsString","parameterTypes":["java.io.InputStream","javax.ws.rs.core.MediaType"] },
      {"name":"writeTo","parameterTypes":["java.io.InputStream","java.io.OutputStream"] },
      {"name":"writeTo","parameterTypes":["java.io.Reader","java.io.Writer"] },
      {"name":"writeToAsString","parameterTypes":["java.lang.String","java.io.OutputStream","javax.ws.rs.core.MediaType"] }
    ]
  },
  {
    "name":"org.glassfish.jersey.message.internal.BasicTypesMessageProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.ByteArrayProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.DataSourceProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.FileProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.FormMultivaluedMapProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.FormProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.InputStreamProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.ReaderProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.StreamingOutputProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.message.internal.StringMessageProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.microprofile.restclient.HeadersRequestFilter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.microprofile.restclient.RequestHeaderAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.microprofile.restclient.RestClientExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.process.Inflector",
    "methods":[{"name":"apply","parameterTypes":["java.lang.Object"] }]
  },
  {
    "name":"org.glassfish.jersey.process.internal.RequestScope",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.BackgroundScheduler",
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.server.ChunkedResponseWriter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.ManagedAsyncExecutor",
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.server.ServerExecutorProvidersConfigurator$DefaultBackgroundSchedulerProvider",
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.server.ServerExecutorProvidersConfigurator$DefaultManagedAsyncExecutorProvider",
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.server.filter.internal.ServerFiltersAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.internal.monitoring.MonitoringAutodiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.internal.monitoring.MonitoringContainerListener",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator$AsyncContextFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator$CloseableServiceFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator$ContainerRequestFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.internal.process.RequestProcessingConfigurator$UriRoutingContextFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.internal.process.RequestProcessingContextReference",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.model.Parameter$ServerParameterService",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.glassfish.jersey.server.spi.ComponentProvider",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.spi.ExternalRequestScope",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.wadl.WadlFeature",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.wadl.internal.WadlAutoDiscoverable",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.wadl.processor.OptionsMethodProcessor$GenericOptionsInflector",
    "allPublicMethods":true,
    "allPublicConstructors":true
  },
  {
    "name":"org.glassfish.jersey.server.wadl.processor.OptionsMethodProcessor$PlainTextOptionsInflector",
    "allPublicMethods":true,
    "allPublicConstructors":true
  },
  {
    "name":"org.glassfish.jersey.spi.AbstractThreadPoolProvider",
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.spi.ExecutorServiceProvider",
    "methods":[
      {"name":"dispose","parameterTypes":["java.util.concurrent.ExecutorService"] },
      {"name":"getExecutorService","parameterTypes":[] }
    ]
  },
  {
    "name":"org.glassfish.jersey.spi.ScheduledThreadPoolExecutorProvider",
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.spi.ThreadPoolExecutorProvider",
    "allDeclaredMethods":true
  },
  {
    "name":"org.glassfish.jersey.weld.se.WeldInjectionManagerStore",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.weld.se.WeldRequestScope",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.jersey.weld.se.WeldRequestScope$Proxy$_$$_WeldClientProxy",
    "allDeclaredFields":true
  },
  {
    "name":"org.glassfish.json.jaxrs.JsonValueBodyReader",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.glassfish.json.jaxrs.JsonValueBodyWriter",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.jandex.ClassInfo",
    "methods":[{"name":"setFlags","parameterTypes":["short"] }]
  },
  {
    "name":"org.jboss.jandex.Index"
  },
  {
    "name":"org.jboss.weld.bean.proxy.ProxyObject",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true,
    "methods":[
      {"name":"weld_getHandler","parameterTypes":[] },
      {"name":"weld_setHandler","parameterTypes":["org.jboss.weld.bean.proxy.MethodHandler"] }
    ]
  },
  {
    "name":"org.jboss.weld.bean.proxy.UnsafeProxyInstantiator",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.jboss.weld.bootstrap.WeldExtension",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.bootstrap.api.helpers.RegistrySingletonProvider",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.jboss.weld.configuration.spi.ExternalConfiguration"
  },
  {
    "name":"org.jboss.weld.context.activator.ActivateRequestContext",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.context.bound.Bound",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.context.unbound.Unbound",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.contexts.activator.AbstractActivateRequestContextInterceptor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"org.jboss.weld.contexts.activator.ActivateRequestContextInterceptor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.contexts.activator.CdiRequestContextActivatorInterceptor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.environment.deployment.discovery.jandex.JandexDiscoveryStrategy",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.weld.resources.spi.ResourceLoader","org.jboss.weld.bootstrap.api.Bootstrap","java.util.Set"] }]
  },
  {
    "name":"org.jboss.weld.environment.logging.CommonLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.jboss.weld.environment.se.WeldSEBeanRegistrant",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.environment.se.beans.ParametersFactory",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.environment.se.bindings.Parameters",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.environment.se.contexts.ThreadScoped",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.environment.se.contexts.activators.ActivateThreadScope",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.environment.se.contexts.activators.ActivateThreadScopeInterceptor",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.environment.se.logging.WeldSELogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.jboss.weld.environment.se.threading.RunnableDecorator",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.events.WeldEvent",
    "allPublicMethods":true
  },
  {
    "name":"org.jboss.weld.events.WeldEvent$Event$$Proxy$_$$_Weld$Proxy$"
  },
  {
    "name":"org.jboss.weld.inject.WeldInstance",
    "allPublicMethods":true
  },
  {
    "name":"org.jboss.weld.inject.WeldInstance$Instance$Provider$$Proxy$_$$_Weld$Proxy$"
  },
  {
    "name":"org.jboss.weld.interceptor.proxy.LifecycleMixin",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.interceptor.util.proxy.TargetInstanceProxy",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jboss.weld.logging.BeanLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.jboss.weld.logging.BootstrapLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.jboss.weld.logging.ConfigurationLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.jboss.weld.logging.ContextLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.jboss.weld.logging.EventLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.jboss.weld.logging.ReflectionLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.jboss.weld.logging.ValidatorLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.jboss.weld.logging.VersionLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.jboss.weld.proxy.WeldClientProxy",
    "methods":[{"name":"getMetadata","parameterTypes":[] }]
  },
  {
    "name":"org.jboss.weld.proxy.WeldConstruct",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allPublicMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jvnet.hk2.internal.DynamicConfigurationServiceImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.jvnet.hk2.internal.ServiceLocatorRuntimeImpl",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"short",
    "allDeclaredMethods":true
  },
  {
    "name":"short[]",
    "allDeclaredMethods":true
  },
  {
    "name":"sun.misc.Unsafe",
    "fields":[{"name":"theUnsafe"}],
    "methods":[
      {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] },
      {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] },
      {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] },
      {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }
    ]
  },
  {
    "name":"sun.nio.ch.SelectorImpl",
    "fields":[
      {"name":"publicSelectedKeys", "allowUnsafeAccess":true},
      {"name":"selectedKeys", "allowUnsafeAccess":true}
    ]
  },
  {
    "name":"sun.reflect.annotation.AnnotationType"
  },
  {
    "name":"sun.security.provider.NativePRNG",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"sun.security.provider.SHA",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  }
]

